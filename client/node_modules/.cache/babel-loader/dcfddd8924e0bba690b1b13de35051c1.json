{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\craft\\\\Documents\\\\Projects\\\\praise\\\\client\\\\src\\\\components\\\\PostForm\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, componenetDidMount } from \"react\";\nimport LineUpForm from \"./LineUpForm\";\nimport SongsForm from \"./SongsForm\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROLES = [\"Leader\", \"Vocal\", \"Acoustic Guitar\", \"Keyboard\", \"Bass\", \"Drummer\", \"Electric Guitar\"];\n\nconst PostForm = () => {\n  _s();\n\n  const [members, setMembers] = useState([]);\n  const [assignments, setAssignments] = useState([{\n    role: \"Leader\",\n    members: [\"\"]\n  }]);\n  const [songs, setSongs] = useState([{\n    title: \"\"\n  }]);\n  const [postData, setPostData] = useState({\n    author: \"\",\n    assignments: {},\n    songs: {}\n  });\n  componenetDidMount(() => {\n    axios.get(\"http://localhost:5000/members\").then(response => {\n      setMembers(response.data);\n      console.log(\"successfully retrieved members from database...\");\n    });\n  }, []);\n  const memberOptions = members.map(member => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: member._id,\n      children: member.firstName + \" \" + member.lastName\n    }, member._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  });\n  const roleOptions = ROLES.map(role => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: role,\n      children: role\n    }, role, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  });\n\n  const handleSubmitPost = () => {\n    let finalAssignments = [...assignments];\n    let finalSongs = [...songs];\n    setPostData({ ...postData,\n      assignments: finalAssignments,\n      songs: finalSongs\n    }, () => {\n      //axios.post(\"http://localhost:5000/posts\", postData).then(() => {console.log(\"successfully sent post request to server...\")});\n      console.log(postData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(LineUpForm, {\n      assignments: assignments,\n      setAssignments: setAssignments,\n      memberOptions: memberOptions,\n      roleOptions: roleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongsForm, {\n      songs: songs,\n      setSongs: setSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-post-button\",\n      onClick: handleSubmitPost,\n      children: \"Post Lineup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostForm, \"lihSdF302QJVAhI2ESyBywUvspc=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/craft/Documents/Projects/praise/client/src/components/PostForm/PostForm.js"],"names":["axios","useState","componenetDidMount","LineUpForm","SongsForm","ROLES","PostForm","members","setMembers","assignments","setAssignments","role","songs","setSongs","title","postData","setPostData","author","get","then","response","data","console","log","memberOptions","map","member","_id","firstName","lastName","roleOptions","handleSubmitPost","finalAssignments","finalSongs"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState, componenetDidMount } from \"react\";\r\n\r\nimport LineUpForm from \"./LineUpForm\";\r\nimport SongsForm from \"./SongsForm\";\r\nimport \"./styles.css\";\r\n\r\nconst ROLES = [\"Leader\", \"Vocal\", \"Acoustic Guitar\", \"Keyboard\", \"Bass\", \"Drummer\", \"Electric Guitar\"];\r\n\r\nconst PostForm = () => {\r\n  const [members, setMembers] = useState([]);\r\n  const [assignments, setAssignments] = useState([{ role: \"Leader\", members: [\"\"] }]);\r\n  const [songs, setSongs] = useState([{ title: \"\" }]);\r\n  const [postData, setPostData] = useState({ author: \"\", assignments: {}, songs: {} });\r\n\r\n  componenetDidMount(() => {\r\n    axios.get(\"http://localhost:5000/members\").then((response) => {\r\n      setMembers(response.data);\r\n      console.log(\"successfully retrieved members from database...\");\r\n    });\r\n  }, []);\r\n\r\n  \r\n\r\n  const memberOptions = members.map((member) => {\r\n    return (\r\n      <option key={member._id} value={member._id}>\r\n        {member.firstName + \" \" + member.lastName}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const roleOptions = ROLES.map((role) => {\r\n    return (\r\n      <option key={role} value={role}>\r\n        {role}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const handleSubmitPost = () => {\r\n    let finalAssignments = [...assignments];\r\n    let finalSongs = [...songs];\r\n    setPostData({ ...postData, assignments: finalAssignments, songs: finalSongs }, () => {\r\n      //axios.post(\"http://localhost:5000/posts\", postData).then(() => {console.log(\"successfully sent post request to server...\")});\r\n      console.log(postData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <LineUpForm\r\n        assignments={assignments}\r\n        setAssignments={setAssignments}\r\n        memberOptions={memberOptions}\r\n        roleOptions={roleOptions}\r\n      />\r\n      <SongsForm songs={songs} setSongs={setSongs} />\r\n      <button className=\"submit-post-button\" onClick={handleSubmitPost}>\r\n        Post Lineup\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}